{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi\\\\Downloads\\\\Dank\\\\proj-main\\\\projman\\\\src\\\\components\\\\ProjectEdit.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { checkPropTypes } from \"prop-types\";\nimport React from \"react\";\nimport { Button, Modal, Form, Dropdown, ButtonGroup, SplitButton, DropdownButton } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport DeleteSend from \"./DeleteSend.js\";\nimport EditSend from \"./EditSend.js\";\nimport DatePicker from \"react-date-picker\";\nimport \"./ProjectEdit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditModal = props => {\n  _s();\n\n  const [data, setData] = React.useState({\n    name: \"#SAME\",\n    org: \"#SAME\",\n    status: \"#SAME\",\n    project: props._id\n  });\n  const [name, setName] = React.useState(\"#SAME\");\n  const [org, setOrg] = React.useState(\"#SAME\");\n  const [duration, setDuration] = React.useState(\"#SAME\");\n  const [validity, setValidity] = React.useState(new Date(props.deadline));\n\n  function editRequest() {\n    console.log(\"sending the edit request of project\");\n    const obj = {\n      name: name,\n      org: org,\n      duration: duration,\n      deadline: validity.toString(),\n      project: props._id\n    };\n    EditSend(obj, \"project\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.showEdit,\n    onHide: () => {\n      props.setShowEdit(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Please rewrite the quatities you wish to edit.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Name : \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"org : \", props.org]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"status : \", props.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"validity : \", props.deadline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          style: {\n            display: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          style: {\n            display: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Org Name\",\n            onChange: e => {\n              setOrg(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          style: {\n            display: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Expected Duration\",\n            onChange: e => {\n              setDuration(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          style: {\n            display: false\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Valid Upto Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: setValidity,\n            value: validity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          props.setShowEdit(false);\n          editRequest();\n        },\n        variant: \"danger\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          props.setShowEdit(false);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditModal, \"eAem2eUs97HtDDcouFj7RHYo2XQ=\");\n\n_c = EditModal;\n\nfunction ProjectEdit(props) {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [show, setShow] = React.useState(false);\n  const [showEdit, setShowEdit] = React.useState(false);\n\n  function DeleteProject() {\n    console.log(\"Deleting the project\");\n    const obj = {\n      project: props._id\n    };\n    DeleteSend(obj, \"project\");\n    window.location.reload();\n  }\n\n  console.log(\"++++++++++++++++++++++++++++++++++\" + props.deadline);\n\n  const DDButton = props => {\n    _s2();\n\n    const history = useHistory();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"viewProject-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"split-button button\",\n          id: `dropdown-button-drop-up`,\n          title: \"View\",\n          onClick: () => {\n            history.push(props.link);\n          },\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          align: \"end\",\n          variant: \"secondary\",\n          drop: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              console.log(\"sure?\");\n              setShowEdit(true);\n            },\n            style: {\n              textAlign: \"center\",\n              backgroundColor: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 146\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            onClick: () => {\n              console.log(\"sure?\");\n              setShow(true);\n            },\n            style: {\n              color: \"red\",\n              backgroundColor: \"lightPink\",\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 159\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: () => {\n          setShow(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Are you sure about this?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Deletion of the project will delete all the related data, including the spreadsheets.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShow(false);\n              DeleteProject();\n            },\n            variant: \"danger\",\n            children: \"Yes, Delete.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShow(false);\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n        showEdit: showEdit,\n        setShowEdit: setShowEdit,\n        name: props.name,\n        org: props.org,\n        duration: props.duration,\n        _id: props._id,\n        deadline: props.deadline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  _s2(DDButton, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n    return [useHistory];\n  });\n\n  return /*#__PURE__*/_jsxDEV(DDButton, {\n    name: props.name,\n    org: props.org,\n    duration: props.duration,\n    link: props.link,\n    _id: props._id,\n    deadline: props.deadline\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(ProjectEdit, \"1bC6/BKn7M5OnP1hMUqf8UGfWDU=\");\n\n_c2 = ProjectEdit;\nexport default ProjectEdit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditModal\");\n$RefreshReg$(_c2, \"ProjectEdit\");","map":{"version":3,"sources":["C:/Users/Rishi/Downloads/Dank/proj-main/projman/src/components/ProjectEdit.js"],"names":["checkPropTypes","React","Button","Modal","Form","Dropdown","ButtonGroup","SplitButton","DropdownButton","Link","useHistory","DeleteSend","EditSend","DatePicker","EditModal","props","data","setData","useState","name","org","status","project","_id","setName","setOrg","duration","setDuration","validity","setValidity","Date","deadline","editRequest","console","log","obj","toString","showEdit","setShowEdit","display","e","target","value","ProjectEdit","show","setShow","DeleteProject","window","location","reload","DDButton","history","push","link","textAlign","backgroundColor","color"],"mappings":"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","sourcesContent":["import { checkPropTypes } from \"prop-types\";\nimport React from \"react\";\nimport {\n  Button,\n  Modal,\n  Form,\n  Dropdown,\n  ButtonGroup,\n  SplitButton,\n  DropdownButton\n} from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport DeleteSend from \"./DeleteSend.js\";\nimport EditSend from \"./EditSend.js\";\nimport DatePicker from \"react-date-picker\";\nimport \"./ProjectEdit.css\";\n\nconst EditModal = (props) => {\n  const [data, setData] = React.useState({\n    name: \"#SAME\",\n    org: \"#SAME\",\n    status: \"#SAME\",\n    project: props._id,\n  });\n  const [name, setName] = React.useState(\"#SAME\");\n  const [org, setOrg] = React.useState(\"#SAME\");\n  const [duration, setDuration] = React.useState(\"#SAME\");\n  const [validity, setValidity] = React.useState(new Date(props.deadline));\n\n  function editRequest() {\n    console.log(\"sending the edit request of project\");\n    const obj = {\n      name: name,\n      org: org,\n      duration: duration,\n      deadline: validity.toString(),\n      project: props._id,\n    };\n\n    EditSend(obj, \"project\");\n  }\n\n  return (\n    <Modal\n      show={props.showEdit}\n      onHide={() => {\n        props.setShowEdit(false);\n      }}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Please rewrite the quatities you wish to edit.\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h3>Current properties</h3>\n        <ul>\n          <li>Name : {props.name}</li>\n          <li>org : {props.org}</li>\n          <li>status : {props.duration}</li>\n          <li>validity : {props.deadline}</li>\n        </ul>\n        <Form>\n          <Form.Group controlId=\"formGridPassword\" style={{ display: false }}>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Name\"\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridPassword\" style={{ display: false }}>\n            <Form.Label>Org</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Org Name\"\n              onChange={(e) => {\n                setOrg(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridPassword\" style={{ display: false }}>\n            <Form.Label>Duration</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Expected Duration\"\n              onChange={(e) => {\n                setDuration(e.target.value);\n              }}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridPassword\" style={{ display: false }}>\n            <Form.Label>Valid Upto Date</Form.Label>\n            <DatePicker onChange={setValidity} value={validity} />\n            {/* <Form.Control type=\"text\" placeholder=\"Expected Duration\"  onChange={(e)=>{setDuration(e.target.value)}} /> */}\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            props.setShowEdit(false);\n            editRequest();\n          }}\n          variant=\"danger\"\n        >\n          Done\n        </Button>\n        <Button\n          onClick={() => {\n            props.setShowEdit(false);\n          }}\n        >\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nfunction ProjectEdit(props) {\n  const [show, setShow] = React.useState(false);\n  const [showEdit, setShowEdit] = React.useState(false);\n\n  function DeleteProject() {\n    console.log(\"Deleting the project\");\n    const obj = {\n      project: props._id,\n    };\n\n    DeleteSend(obj, \"project\");\n    window.location.reload();\n  }\n\n  console.log(\"++++++++++++++++++++++++++++++++++\" + props.deadline);\n  const DDButton = (props) => {\n    const history = useHistory();\n    return (\n      <>\n        <Dropdown className=\"viewProject-container\">\n        <Button className=\"split-button button\" id={`dropdown-button-drop-up`} title = \"View\" onClick={()=>{history.push(props.link)}}>View</Button>\n        <DropdownButton  align=\"end\" variant=\"secondary\" drop=\"right\">\n            <Dropdown.Item  onClick={()=>{console.log(\"sure?\");setShowEdit(true)}}  style={{ textAlign : \"center\" ,  backgroundColor : \"white\"}}><b>Edit</b></Dropdown.Item>\n            <Dropdown.Item  onClick={()=>{console.log(\"sure?\");setShow(true)}}  style={{color :\"red\" , backgroundColor : \"lightPink\" , textAlign : \"center\"}}><b>Delete</b></Dropdown.Item>\n        </DropdownButton>\n        </Dropdown>\n        {/* <ButtonToolbar>\n          <Dropdown id=\"dropdown-custom-2\">\n            <Button className=\"split-button\">mix it up style-wise</Button>\n            <Dropdown.Toggle className=\"split-button\" />\n            <Dropdown.Menu className=\"split-button\">\n              <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\n              <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\n              <Dropdown.Item eventKey=\"3\">\n                Active Item\n              </Dropdown.Item>\n              <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </ButtonToolbar> */}\n        {/* <Dropdown as={ButtonGroup}>\n            <Link to= {props.link}><Button variant=\"success\"> Veiw</Button></Link>\n\n            <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\n            \n            <Dropdown.Menu drop=\"up\">\n            <Dropdown.Item  onClick={()=>{console.log(\"sure?\");setShowEdit(true)}}  style={{ textAlign : \"center\" ,  backgroundColor : \"black\"}}><b>Edit</b></Dropdown.Item>\n            <Dropdown.Item  onClick={()=>{console.log(\"sure?\");setShow(true)}}  style={{color :\"red\" , backgroundColor : \"lightPink\" , textAlign : \"center\"}}><b>Delete</b></Dropdown.Item>\n            \n              \n            </Dropdown.Menu>\n            </Dropdown> */}\n        {/* <DeletionWarning onConfirm={DeleteMember} show={show} onHide={()=>{setShow(false)}} /> */}\n        <Modal\n          show={show}\n          onHide={() => {\n            setShow(false);\n          }}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              Are you sure about this?\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Deletion of the project will delete all the related data,\n              including the spreadsheets.\n            </p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button\n              onClick={() => {\n                setShow(false);\n                DeleteProject();\n              }}\n              variant=\"danger\"\n            >\n              Yes, Delete.\n            </Button>\n            <Button\n              onClick={() => {\n                setShow(false);\n              }}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        <EditModal\n          showEdit={showEdit}\n          setShowEdit={setShowEdit}\n          name={props.name}\n          org={props.org}\n          duration={props.duration}\n          _id={props._id}\n          deadline={props.deadline}\n        />\n      </>\n    );\n  };\n\n  return (\n    <DDButton\n      name={props.name}\n      org={props.org}\n      duration={props.duration}\n      link={props.link}\n      _id={props._id}\n      deadline={props.deadline}\n    />\n  );\n}\n\nexport default ProjectEdit;\n"]},"metadata":{},"sourceType":"module"}