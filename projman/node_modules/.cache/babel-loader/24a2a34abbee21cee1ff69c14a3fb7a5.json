{"ast":null,"code":"import _slicedToArray from\"C:/Users/Rishi/Downloads/Dank/proj-main/projman/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Card,Container,Button,DropdownButton,Dropdown}from\"react-bootstrap\";import TaskCard from\"./TaskCard\";import AddTask from\"./AddTask\";import{Redirect,useLocation}from\"react-router-dom\";import Wave from\"react-wavify\";import LoginPage from\"./LoginPage\";import\"./MemberPage.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MemberPage(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),taskList=_React$useState2[0],setTaskList=_React$useState2[1];var _React$useState3=React.useState(\"Editor\"),_React$useState4=_slicedToArray(_React$useState3,2),permission=_React$useState4[0],setPermission=_React$useState4[1];var location=useLocation();React.useEffect(function(){fetch(\"http://localhost:9000/tasks/\"+projectId+\"/\"+memberId).then(function(res){return res.json();}).then(function(data){return setTaskList(data);});},[]);if(location.state){}else{return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}var projectId=location.state.project;var memberId=location.state.member._id;var member=location.state.member;var params={projectId:projectId,memberId:memberId};return/*#__PURE__*/_jsx(\"div\",{className:\"member-main-container\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(DropdownButton// id=\"dropdown-basic-button\"\n,{variant:\"danger\",title:\"Change Permissions\",className:\"role-button\",children:[/*#__PURE__*/_jsx(Dropdown.Item,{onClick:function onClick(){setPermission(\"Editor\");},children:\"Editor\"}),/*#__PURE__*/_jsx(Dropdown.Item,{onClick:function onClick(){setPermission(\"Commentor\");},children:\"Commentor\"}),/*#__PURE__*/_jsx(Dropdown.Item,{onClick:function onClick(){setPermission(\"Viewer\");},children:\"Viewer\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"memberCard-container\",children:[/*#__PURE__*/_jsxs(Card.Body,{variant:\"dark\",children:[/*#__PURE__*/_jsx(\"em\",{style:{fontSize:\"1.2rem\"},children:\"Name\"}),\" : \",\" \"+member.name]}),/*#__PURE__*/_jsxs(Card.Body,{variant:\"dark\",children:[/*#__PURE__*/_jsx(\"em\",{style:{fontSize:\"1.2rem\"},children:\"Email\"}),\" : \",\" \"+member.email]}),/*#__PURE__*/_jsxs(Card.Body,{variant:\"dark\",children:[/*#__PURE__*/_jsx(\"em\",{style:{fontSize:\"1.2rem\"},children:\"Role\"}),\" : \",\" \"+member.role]}),/*#__PURE__*/_jsxs(Card.Body,{variant:\"dark\",children:[/*#__PURE__*/_jsx(\"em\",{style:{fontSize:\"1.2rem\"},children:\"Permission\"}),\" : \",\" \"+permission]})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\"},children:taskList.map(function(task,key){return/*#__PURE__*/_jsx(TaskCard,{task:task,member:member});})})]})});}","map":{"version":3,"sources":["C:/Users/Rishi/Downloads/Dank/proj-main/projman/src/components/MemberPage.js"],"names":["React","Card","Container","Button","DropdownButton","Dropdown","TaskCard","AddTask","Redirect","useLocation","Wave","LoginPage","MemberPage","props","useState","taskList","setTaskList","permission","setPermission","location","useEffect","fetch","projectId","memberId","then","res","json","data","state","project","member","_id","params","fontSize","name","email","role","display","map","task","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  Container,\n  Button,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport TaskCard from \"./TaskCard\";\nimport AddTask from \"./AddTask\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport Wave from \"react-wavify\";\nimport LoginPage from \"./LoginPage\";\nimport \"./MemberPage.css\";\n\nexport default function MemberPage(props) {\n  const [taskList, setTaskList] = React.useState([]);\n\n  const [permission, setPermission] = React.useState(\"Editor\");\n\n  const location = useLocation();\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:9000/tasks/\" + projectId + \"/\" + memberId)\n      .then((res) => res.json())\n      .then((data) => setTaskList(data));\n  }, []);\n\n  if (location.state) {\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n  const projectId = location.state.project;\n  const memberId = location.state.member._id;\n  const member = location.state.member;\n  const params = { projectId: projectId, memberId: memberId };\n\n  return (\n    <div className=\"member-main-container\">\n      <Container>\n        <DropdownButton\n          // id=\"dropdown-basic-button\"\n          variant=\"danger\"\n          title=\"Change Permissions\"\n          className=\"role-button\"\n        >\n          <Dropdown.Item\n            onClick={() => {\n              setPermission(\"Editor\");\n            }}\n          >\n            Editor\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={() => {\n              setPermission(\"Commentor\");\n            }}\n          >\n            Commentor\n          </Dropdown.Item>\n          <Dropdown.Item\n            onClick={() => {\n              setPermission(\"Viewer\");\n            }}\n          >\n            Viewer\n          </Dropdown.Item>\n        </DropdownButton>\n        <div className=\"memberCard-container\">\n          <Card.Body variant=\"dark\"><em style={{fontSize:\"1.2rem\"}}>Name</em> : {\" \" + member.name}</Card.Body>\n          <Card.Body variant=\"dark\"><em style={{fontSize:\"1.2rem\"}}>Email</em> : {\" \" + member.email}</Card.Body>\n          <Card.Body variant=\"dark\"><em style={{fontSize:\"1.2rem\"}}>Role</em> : {\" \" + member.role}</Card.Body>\n          <Card.Body variant=\"dark\"><em style={{fontSize:\"1.2rem\"}}>Permission</em> : {\" \" + permission}</Card.Body>\n          {/* <Card.Body variant=\"dark\" style={{backgroundColor : \"lightPink\"}}>Current Tasks</Card.Body> */}\n        </div>\n        {/* <AddTask member= {member} projectId = {projectId}></AddTask> */}\n        <div style={{ display: \"flex\" }}>\n          {taskList.map((task, key) => {\n            return <TaskCard task={task} member={member}></TaskCard>;\n          })}\n        </div>\n      </Container>\n      {/* <Wave fill='#6699ff'\n        paused={false}\n        options={{\n          height: 1,\n          amplitude: 20,\n          speed: 0.15,\n          points: 6\n        }}\n      /> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}