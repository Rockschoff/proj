{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi\\\\Downloads\\\\Dank\\\\proj-main\\\\projman\\\\src\\\\components\\\\ProjPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport TeamTable from \"./TeamTable\";\nimport CheckPointsList from \"./CheckPointsList\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport { useLocation, Redirect } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TeamMail from \"./TeamMail\";\nimport Wave from \"react-wavify\";\nimport LoginPage from \"./LoginPage\";\nimport \"./ProjPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(fab);\nexport default function ProjPage(props) {\n  _s();\n\n  console.log(\"on projpage\");\n  const [memberList, setMemberList] = React.useState([]);\n  const [link, setLink] = React.useState(\"\");\n  const [checkpoints, setCheckpoints] = React.useState([]);\n  let location = useLocation();\n  React.useEffect(() => {\n    /*\"http://localhost:9000/members/\"*/\n    console.log(\"before the fetch\");\n    fetch(\"/members/\" + location.state._id, {\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      setMemberList(data.list);\n      setLink(data.link);\n      setCheckpoints(data.checkpoints);\n    });\n  }, []);\n\n  if (location.state) {} else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: location.state.org\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: location.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: location.state.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        href: link,\n        className: \"ss-btn\",\n        children: \"Open SpreadSheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), console.log(link), console.log(checkpoints), /*#__PURE__*/_jsxDEV(TeamTable, {\n        members: [\"memberList\", \"sadad\"],\n        projectId: location.state._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wave, {\n      paused: false,\n      options: {\n        height: 1,\n        amplitude: 20,\n        speed: 0.15,\n        points: 6\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjPage, \"s3v8paVkfAXILZL/DJ3w6ZdDm/I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ProjPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjPage\");","map":{"version":3,"sources":["C:/Users/Rishi/Downloads/Dank/proj-main/projman/src/components/ProjPage.js"],"names":["React","TeamTable","CheckPointsList","Button","Container","useLocation","Redirect","library","fab","FontAwesomeIcon","TeamMail","Wave","LoginPage","add","ProjPage","props","console","log","memberList","setMemberList","useState","link","setLink","checkpoints","setCheckpoints","location","useEffect","fetch","state","_id","method","then","res","json","data","list","width","org","name","duration","height","amplitude","speed","points"],"mappings":"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","sourcesContent":["import React from 'react'\nimport TeamTable from \"./TeamTable\"\nimport CheckPointsList from \"./CheckPointsList\"\nimport Button from \"react-bootstrap/Button\"\nimport Container from \"react-bootstrap/Container\"\nimport {   useLocation , Redirect } from \"react-router-dom\";\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport TeamMail from \"./TeamMail\"\nimport Wave from \"react-wavify\"\nimport  LoginPage from \"./LoginPage\"\nimport \"./ProjPage.css\";\n\nlibrary.add(fab);\n\nexport default function ProjPage(props) {\n      console.log(\"on projpage\")\n   \n     const [memberList , setMemberList] = React.useState([])\n     const [link , setLink] = React.useState(\"\")\n     const [checkpoints , setCheckpoints] = React.useState([])\n    \n    let location = useLocation();\n\n    React.useEffect(()=>{\n\n        \n        /*\"http://localhost:9000/members/\"*/\n\n        console.log(\"before the fetch\")\n        fetch( \"/members/\" + (location.state._id) , {\n            method : \"GET\",\n        }).then(res => res.json()).then(data => {setMemberList(data.list) ; setLink(data.link);setCheckpoints(data.checkpoints)});\n        \n        \n\n    } ,[])\n    \n    if(location.state){\n\n    }else{\n      return(\n        <Redirect to=\"/\" />\n      )\n    }\n    \n    \n    return (\n        <div>\n        <Container className= \"text-center\" style={{width : \"100%\"}}> \n            {/* Team table, it will have a name, emailLink , role.\n            Clicking on each team will give the notes on that memeber */}\n            {/* Then there will be list of task that are going on, people who are working on them \n            and the upcoming deadlines */}\n            <div className=\"project-container\">\n              <h1>{location.state.org}</h1>\n              <h4>{location.state.name}</h4>\n              <p>{location.state.duration}</p>\n            </div>\n            <Button variant = \"dark\" href = {link} className=\"ss-btn\">Open SpreadSheet</Button>\n            {console.log(link)}\n            {console.log(checkpoints)}\n            {/* <TeamTable project = {props.project}></TeamTable> */}\n            <TeamTable members = {[\"memberList\",\"sadad\"]  } projectId = {location.state._id} ></TeamTable>\n            {/* <TeamMail></TeamMail> */}\n            {/* <CheckPointsList checkpoints = {checkpoints} projectId = {state._id}></CheckPointsList> */}\n        </Container>\n        <Wave \n        paused={false}\n        options={{\n          height: 1,\n          amplitude: 20,\n          speed: 0.15,\n          points: 6\n        }}\n      />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}