{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi\\\\Downloads\\\\Dank\\\\proj-main\\\\projman\\\\src\\\\components\\\\AddProjForm.js\",\n    _s = $RefreshSig$();\n\nimport { faWindows } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useState } from \"react\";\nimport { Form, Button, Container, Modal, Col, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport DatePicker from \"react-date-picker\";\nimport Send from \"./Send\";\nimport \"./AddProjForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddProjForm(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [start, setStart] = useState(new Date());\n  const [deadline, setDeadline] = useState(new Date());\n  const [name, setName] = useState(\"\");\n  const [org, setOrg] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [showForm, setShowForm] = useState({\n    display: \"true\"\n  });\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  function handleSubmit() {\n    console.log(duration);\n    var obj = {\n      name: name,\n      org: org,\n      link: \"\",\n      start: start.toString(),\n      deadline: deadline.toString(),\n      members: [],\n      checkpoints: [],\n      special: [],\n      status: \"Ongoing\",\n      duration: duration,\n      totalExports: 10\n    };\n    sendToBackend(obj);\n    setShowForm({\n      display: \"false\"\n    });\n    handleClose();\n    window.location.reload();\n  }\n\n  function sendToBackend(obj) {\n    Send(obj, \"project\", props.user);\n    console.log(obj);\n    console.log(\"creating project in the backend\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      className: \"addButton\",\n      children: \"Add a New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      size: \"lg\",\n      className: \"modal-container\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add A New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Please add the relevant details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: showForm,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridEmail\",\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter name\",\n                onChange: e => {\n                  setName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridPassword\",\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Organization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Org. name\",\n                onChange: e => {\n                  setOrg(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n            className: \"date-container\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGridPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setStart,\n                value: start\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGridPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Valid Upto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                onChange: setDeadline,\n                value: deadline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Duration of the Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"(Ex : 60s)\",\n              onChange: e => {\n                setDuration(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), () => {\n        if (showForm == {\n          display: \"false\"\n        }) {\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Please wait as set up the sheet in the back end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 20\n          }, this);\n        }\n      }, /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleClose,\n          className: \"close-button\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          className: \"submit-button\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddProjForm, \"vTVp8X8iYg5+H0tx3c4i1MTC6T0=\");\n\n_c = AddProjForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProjForm\");","map":{"version":3,"sources":["C:/Users/Rishi/Downloads/Dank/proj-main/projman/src/components/AddProjForm.js"],"names":["faWindows","React","useState","Form","Button","Container","Modal","Col","Tooltip","OverlayTrigger","DatePicker","Send","AddProjForm","props","show","setShow","start","setStart","Date","deadline","setDeadline","name","setName","org","setOrg","duration","setDuration","showForm","setShowForm","display","handleClose","handleShow","handleSubmit","console","log","obj","link","toString","members","checkpoints","special","status","totalExports","sendToBackend","window","location","reload","user","justifyContent","e","target","value"],"mappings":"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","sourcesContent":["import { faWindows } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useState } from \"react\";\nimport {\n  Form,\n  Button,\n  Container,\n  Modal,\n  Col,\n  Tooltip,\n  OverlayTrigger,\n} from \"react-bootstrap\";\nimport DatePicker from \"react-date-picker\";\nimport Send from \"./Send\";\nimport \"./AddProjForm.css\";\n\nexport default function AddProjForm(props) {\n  const [show, setShow] = useState(false);\n  const [start, setStart] = useState(new Date());\n  const [deadline, setDeadline] = useState(new Date());\n  const [name, setName] = useState(\"\");\n  const [org, setOrg] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [showForm, setShowForm] = useState({ display: \"true\" });\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  function handleSubmit() {\n    console.log(duration);\n    var obj = {\n      name: name,\n      org: org,\n      link: \"\",\n      start: start.toString(),\n      deadline: deadline.toString(),\n      members: [],\n      checkpoints: [],\n      special: [],\n      status: \"Ongoing\",\n      duration: duration,\n      totalExports: 10,\n    };\n\n    sendToBackend(obj);\n    setShowForm({ display: \"false\" });\n    handleClose();\n    window.location.reload();\n  }\n\n  function sendToBackend(obj) {\n    Send(obj, \"project\", props.user);\n    console.log(obj);\n    console.log(\"creating project in the backend\");\n  }\n\n  return (\n    <Container style={{ justifyContent: \"center\" }}>\n      <Button onClick={handleShow} className=\"addButton\">\n        Add a New Project\n      </Button>\n      <Modal show={show} onHide={handleClose} size=\"lg\" className=\"modal-container\">\n        <Modal.Header closeButton>\n          <Modal.Title>Add A New Project</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Please add the relevant details</Modal.Body>\n        <div style={showForm}>\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridEmail\" className=\"input-container\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  onChange={(e) => {\n                    setName(e.target.value);\n                  }}\n                />\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridPassword\" className=\"input-container\">\n                <Form.Label>Organization</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Org. name\"\n                  onChange={(e) => {\n                    setOrg(e.target.value);\n                  }}\n                />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row className=\"date-container\">\n            <Form.Group controlId=\"formGridPassword\">\n              <Form.Label>Start Date</Form.Label>\n              <DatePicker onChange={setStart} value={start} />\n            </Form.Group>\n            <Form.Group controlId=\"formGridPassword\">\n              <Form.Label>Valid Upto</Form.Label>\n              <DatePicker onChange={setDeadline} value={deadline} />\n            </Form.Group>\n            </Form.Row>\n            <Form.Group as={Col} controlId=\"formGridPassword\">\n              <Form.Label>Duration of the Project</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"(Ex : 60s)\"\n                onChange={(e) => {\n                  setDuration(e.target.value);\n                }}\n              />\n            </Form.Group>\n          </Form>\n        </div>\n        {() => {\n          if (showForm == { display: \"false\" }) {\n            return <h2>Please wait as set up the sheet in the back end</h2>;\n          }\n        }}\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleClose} className=\"close-button\">\n            Close\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit} className=\"submit-button\">\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}