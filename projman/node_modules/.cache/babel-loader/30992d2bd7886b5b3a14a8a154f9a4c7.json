{"ast":null,"code":"import _slicedToArray from\"C:/Users/Rishi/Downloads/Dank/proj-main/projman/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Container,Form,Modal,Col,Button}from\"react-bootstrap\";import Send from\"./Send\";import\"./AddMember.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddMember(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),role=_useState8[0],setRole=_useState8[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){return setShow(true);};function handleSubmit(){var obj={project:props.project,name:name,email:email,role:role,tasks:[],special:[]};sendToBackend(obj);handleClose();}function sendToBackend(obj){Send(obj,\"member\",\"none\");console.log(obj);console.log(\"adding new member to\"+props.project);}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleShow,style:{margin:\"20px auto 20px auto\"},className:\"submit-button\",children:\"Add Member\"}),/*#__PURE__*/_jsxs(Modal,{show:show,onHide:handleClose,size:\"lg\",className:\"modal-container\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Add a New Member\"})}),/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Row,{children:[/*#__PURE__*/_jsxs(Form.Group,{as:Col,controlId:\"formGridEmail\",className:\"input-container\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter name of the Member\",onChange:function onChange(e){setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Col,controlId:\"formGridPassword\",className:\"input-container\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Role\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Specify the Role\",onChange:function onChange(e){setRole(e.target.value);}})]})]}),/*#__PURE__*/_jsxs(Form.Group,{as:Col,controlId:\"formGridPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email-ID\",onChange:function onChange(e){setEmail(e.target.value);}})]})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:handleClose,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",onClick:handleSubmit,className:\"submit-button\",children:\"Save Changes\"})]})]})]});}","map":{"version":3,"sources":["C:/Users/Rishi/Downloads/Dank/proj-main/projman/src/components/AddMember.js"],"names":["React","useState","Container","Form","Modal","Col","Button","Send","AddMember","props","show","setShow","name","setName","email","setEmail","role","setRole","handleClose","handleShow","handleSubmit","obj","project","tasks","special","sendToBackend","console","log","margin","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Form, Modal, Col, Button } from \"react-bootstrap\";\nimport Send from \"./Send\";\nimport \"./AddMember.css\";\n\nexport default function AddMember(props) {\n  const [show, setShow] = useState(false);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  function handleSubmit() {\n    var obj = {\n      project: props.project,\n      name: name,\n      email: email,\n      role: role,\n      tasks: [],\n      special: [],\n    };\n\n    sendToBackend(obj);\n    handleClose();\n  }\n\n  function sendToBackend(obj) {\n    Send(obj, \"member\", \"none\");\n    console.log(obj);\n    console.log(\"adding new member to\" + props.project);\n  }\n\n  return (\n    <Container>\n      <Button onClick={handleShow} style={{ margin: \"20px auto 20px auto\" }} className=\"submit-button\">\n        Add Member\n      </Button>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"lg\"\n        className=\"modal-container\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add a New Member</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridEmail\" className=\"input-container\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter name of the Member\"\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPassword\" className=\"input-container\">\n              <Form.Label>Role</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Specify the Role\"\n                onChange={(e) => {\n                  setRole(e.target.value);\n                }}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter Email-ID\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </Form.Group>\n        </Form>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={handleSubmit}\n            className=\"submit-button\"\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}