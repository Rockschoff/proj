{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishi\\\\Downloads\\\\Dank\\\\proj-main\\\\projman\\\\src\\\\components\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Modal, Form, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-date-picker\";\nimport Send from \"./Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTask(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [start, setStart] = useState(new Date());\n  const [deadline, setDeadline] = useState(new Date());\n  const [heading, setHeading] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [urgent, setUrgent] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  function handleSubmit() {\n    var obj = {\n      member: props.member._id,\n      project: props.projectId,\n      heading: heading,\n      description: description,\n      urgent: urgent,\n      assigned: start,\n      deadline: deadline\n    };\n    sendToBackend(obj);\n    handleClose();\n  }\n\n  function sendToBackend(obj) {\n    Send(obj, \"task\");\n    console.log(obj);\n    console.log(\"creating project in the backend\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleShow,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Task Name\",\n            onChange: e => {\n              setHeading(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"exampleForm.ControlTextarea1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Example textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            onChange: e => {\n              setDescription(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicCheckbox\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Check me out\",\n            onChange: e => {\n              setUrgent(!urgent);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: setStart,\n            value: start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formGridPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            onChange: setDeadline,\n            value: deadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTask, \"BoM2KJJp6aaD1hlpmCn9GuIzf4E=\");\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Users/Rishi/Downloads/Dank/proj-main/projman/src/components/AddTask.js"],"names":["React","useState","Container","Modal","Form","Button","DatePicker","Send","AddTask","props","show","setShow","start","setStart","Date","deadline","setDeadline","heading","setHeading","description","setDescription","urgent","setUrgent","handleClose","handleShow","handleSubmit","obj","member","_id","project","projectId","assigned","sendToBackend","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\nimport { Container, Modal , Form , Button} from \"react-bootstrap\"\nimport DatePicker from \"react-date-picker\"\nimport Send from \"./Send\"\n\nexport default function AddTask(props) {\n\n    const [show, setShow] = useState(false);\n    const [start , setStart] = useState(new Date());\n    const [deadline , setDeadline] = useState(new Date());\n    const [heading , setHeading] = useState(\"\");\n    const [description , setDescription] = useState(\"\");\n    const [urgent , setUrgent] = useState(false)\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    function handleSubmit(){\n        var obj = {\n            member : props.member._id,\n            project : props.projectId,\n            heading : heading,\n            description : description,\n            urgent : urgent,\n            assigned : start,\n            deadline : deadline,\n            \n        }\n\n        sendToBackend(obj);\n        handleClose()\n    }\n\n    function sendToBackend(obj){\n        Send(obj , \"task\");\n        console.log(obj);\n        console.log(\"creating project in the backend\");\n    }\n\n    \n    return (\n        <Container>\n            <Button onClick={handleShow}>Add Task</Button>\n            <Modal show={show} onHide={handleClose} size=\"lg\">\n                <Modal.Header closeButton>\n                <Modal.Title>Add Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                <Form >\n                    \n                    <Form.Group  controlId=\"formGridPassword\">\n                        <Form.Label>Task Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Task Name\"  onChange={(e)=>{setHeading(e.target.value)}} />\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Example textarea</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} onChange={(e)=>{setDescription(e.target.value)}} />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" onChange={(e)=>{setUrgent(!urgent)}} />\n                    </Form.Group>\n                    <Form.Group  controlId=\"formGridPassword\">\n                    <Form.Label>Start Date</Form.Label>\n                    <DatePicker onChange={setStart} value = {start}/>\n                    </Form.Group>\n                    <Form.Group  controlId=\"formGridPassword\">\n                    <Form.Label>Deadline</Form.Label>\n                    <DatePicker onChange={setDeadline} value = {deadline}/>\n                    </Form.Group>\n                </Form>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                    Save Changes\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}